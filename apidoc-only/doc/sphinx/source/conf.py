# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

src_path = os.path.join('/Users/dadoun/Programs/Python/coa-project/pycoa/','coa')
#src_path = os.path.join('..','docs/src','coa')
sys.path.insert(0, src_path)
print('src_path:',src_path)

# -- Project information -----------------------------------------------------
try:
    release = os.getenv("GIT_BRANCH")
except:
    release = ""

project = 'Pycoa'
copyright = '2021, Pycoa'
author = 'PYCOA team'

# The full version, including alpha/beta/rc tags



def run_apidoc(app):
    """Generage API documentation"""
    import better_apidoc
    better_apidoc.APP = app
    better_apidoc.main([
        'better-apidoc',
        '-t',
        os.path.join('.', 'source','_templates'),
        '--force',
        '--no-toc',
        '--separate',
        '-o',
        'source',
        src_path,
    ])

# -- General configuration ---------------------------------------------------
highlight_language = 'python3'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
#    "doctr_versions_menu",
#    "nbsphinx",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
#    "sphinx.ext.coverage",
#    "sphinx.ext.doctest",
#    "sphinx.ext.extlinks",
#    "sphinx.ext.ifconfig",
    "sphinx.ext.inheritance_diagram",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
#    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
	'sphinx_pyreverse',
#    "sphinx_copybutton",
#    "sphinxcontrib.bibtex",
#    "dollarmath",  # must be loaded after sphinx.ext.autodoc
    'sphinx_jekyll_builder',
]

# Options extension
# 
numpydoc_show_class_members = True
show_authors = True
add_module_names = False
sphinx_pyreverse_show_ancestors = "2"


# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

#show_authors = True

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    'build/*'
]

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

html_theme_options = {
    "collapse_navigation": True,
    "display_version": True,
    "navigation_depth": 4,
}


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

def setup(app):
    app.connect('builder-inited', run_apidoc)

